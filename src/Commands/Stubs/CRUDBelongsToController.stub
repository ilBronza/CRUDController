<?php

namespace {{ namespace }};

use App\Http\Controllers\CRUDTraits\CRUD{{ model }}ParametersTrait;

use App\Models\{{ model }};
use App\Models\{{ parentmodel }};

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use IlBronza\CRUD\BelongsToCRUDController;

use IlBronza\CRUD\Traits\CRUDBelongsToManyTrait;
use IlBronza\CRUD\Traits\CRUDRelationshipTrait;

use IlBronza\CRUD\Traits\CRUDCreateStoreTrait;
use IlBronza\CRUD\Traits\CRUDEditUpdateTrait;
use IlBronza\CRUD\Traits\CRUDIndexTrait;
use IlBronza\CRUD\Traits\CRUDNestableTrait;
use IlBronza\CRUD\Traits\CRUDShowTrait;

use IlBronza\CRUD\Traits\CRUDDeleteTrait;
use IlBronza\CRUD\Traits\CRUDDestroyTrait;

class {{ class }} extends BelongsToCRUDController
{
    use CRUD{{ model }}ParametersTrait;

    use CRUDShowTrait;
    use CRUDIndexTrait;
    use CRUDNestableTrait;
    use CRUDEditUpdateTrait;
    use CRUDCreateStoreTrait;

    use CRUDDeleteTrait;
    use CRUDDestroyTrait;

    use CRUDRelationshipTrait;
    use CRUDBelongsToManyTrait;

    public $parentModelClass = '\App\Models\{{ parentmodel }}';
    public $modelClass = '\App\Models\{{ model }}';

    public $allowedMethods = [
        'index',
        'show',
        'edit',
        'update',
        'create',
        'store',
        'destroy',
        'deleted',
        'archived',
        'reorder',
        'stroreReorder'
    ];

    /**
     * return this controller's specific parent model's attributes to be shown on teaser view
     *
     * @return array
     **/
     /*
    public function getControllerSpecificParentModelTeaserAttributes() : array
    {
        return [
            'name' => $this->parentModel->getName(),
            'stuff' => 'extra stuff',
            'image' => 'image-jpg'
        ];
    }
    */

    //this is needed to override routename ex contacts.buildings.store => buildings.store
    // public $routeBaseNamePieces = ['buildings'];


    // public $guardedEditDBFields = ['id', 'created_at', 'updated_at', 'deleted_at'];
    // public $guardedCreateDBFields = ['id', 'created_at', 'updated_at', 'deleted_at'];
    public $guardedShowDBFields = ['id', 'created_at', 'updated_at', 'deleted_at'];

    public $showMethodRelationships = ['posts', 'users', 'operations'];

    public function __construct()
    {
        parent::__construct();

        $this->parentModel = {{ parentmodel }}::findOrFail(
            Route::current()->parameter('{{ parentmodelVariable }}')
        );
    }

    public function index({{ parentmodel }} ${{ parentmodelVariable }})
    {
        return $this->_index();
    }

    public function getIndexElements()
    {
        return $this->parentModel->{{ pluralModel }}()->get();
    }

    public function show({{ parentmodel }} ${{ parentmodelVariable }}, {{ model }} ${{ modelVariable }})
    {
        return $this->_show(${{ modelVariable }});
    }

    public function edit({{ parentmodel }} ${{ parentmodelVariable }}, {{ model }} ${{ modelVariable }})
    {
        return $this->_edit(${{ modelVariable }});
    }

    public function update(Request $request, {{ parentmodel }} ${{ parentmodelVariable }}, {{ model }} ${{ modelVariable }})
    {
        return $this->_update($request, ${{ modelVariable }});
    }

    public function store(Request $request, {{ parentmodel }} ${{ parentmodelVariable }})
    {
        return $this->_store($request);
    }

    public function delete({{ parentmodel }} ${{ parentmodelVariable }}, {{ model }} ${{ modelVariable }})
    {
        return $this->_delete(${{ modelVariable }});
    }
}
